<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Study-notes | Better Mi]]></title>
  <link href="http://bettermi.github.io/blog/categories/study-notes/atom.xml" rel="self"/>
  <link href="http://bettermi.github.io/"/>
  <updated>2016-02-18T11:04:00+08:00</updated>
  <id>http://bettermi.github.io/</id>
  <author>
    <name><![CDATA[HM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS开发中遇到的小问题]]></title>
    <link href="http://bettermi.github.io/blog/2016/02/18/ioskai-fa-zhong-yu-dao-de-xiao-wen-ti/"/>
    <updated>2016-02-18T10:49:56+08:00</updated>
    <id>http://bettermi.github.io/blog/2016/02/18/ioskai-fa-zhong-yu-dao-de-xiao-wen-ti</id>
    <content type="html"><![CDATA[<h2>  UIImageView添加手势无效</h2>

<p>  向UIImageView对象添加UIGestureRecognizer手势的时候发现，手势无法产生响应。查找原因，原来是默认生成的UIImageView对象的userInteractionEnabled、multipleTouchEnabled属性值为NO，将其设置为YES就可以响应手势了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的一些配置]]></title>
    <link href="http://bettermi.github.io/blog/2016/01/22/octopressde-%5B%3F%5D-xie-pei-zhi/"/>
    <updated>2016-01-22T16:13:59+08:00</updated>
    <id>http://bettermi.github.io/blog/2016/01/22/octopressde-[?]-xie-pei-zhi</id>
    <content type="html"><![CDATA[<h2> 添加文章分类 </h2>

<p> 我们想要给文字加一些分类，同时可以按照这些分类来查看文章，要怎么办呢？</p>

<ol>
<li><p>添加category_list</p>

<pre><code class="git">git clone https://github.com/tokkonopapa/octopress-tagcloud.git
</code></pre></li>
<li><p>将category_list.html和tag_cloud.html放到/source/_includes/asides路径下，将tag_cloud.rb放到/plugins路径下</p></li>
<li><p>修改<em>config.yml，在</em>config.yml文件中找到default_asides，在中括号中添加asides/category_list.html。加入的顺序决定了在侧边栏中显示的顺序。</p></li>
</ol>


<h2> 新建及修改Page </h2>

<p> 默认的Octopress给我们生成了两个page，如果我们想要新建一些page，可以这样来做：</p>

<ol>
<li><p>rake new_page[&lsquo;about&rsquo;]</p>

<p>这样会生成一个/Users/qiyou_hm/octopress/source/about/index.markdown，编辑就可以啦~</p></li>
<li><p>在文件/Users/qiyou_hm/octopress/source/_includes/custom/navigation.htm中中加加</p>

<pre><code class="html"> &lt;li&gt;&lt;a href="/about"&gt;AboutMe&lt;/a&gt;&lt;/li&gt;
</code></pre></li>
</ol>


<h2> 添加链接</h2>

<p> 在侧边栏中我们也可以添加一些友情链接，方法如下：</p>

<ol>
<li>在路径/Users/qiyou_hm/octopress/source/_includes/asides下新建文件blog_link.html</li>
</ol>


<pre><code class="`"> &lt;section&gt;
    &lt;h1&gt;Links&lt;/h1&gt;
    &lt;ul&gt;
        &lt;li&gt;
        &lt;a href="https://github.com/yl33643/yl33643.github.io"&gt;github yl33643.github.io&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
 &lt;/section&gt; 
</code></pre>

<p> 最后要记住，在_config.yml的default_asides array中添加asides/blog_link.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学习BASH Shell]]></title>
    <link href="http://bettermi.github.io/blog/2016/01/20/xue-xi-bash-shell/"/>
    <updated>2016-01-20T10:18:04+08:00</updated>
    <id>http://bettermi.github.io/blog/2016/01/20/xue-xi-bash-shell</id>
    <content type="html"><![CDATA[<h2> 什么是Shell</h2>

<p> 最直观的，从英语单词来看，Shell就是壳子。那么是什么东西的壳子呢？</p>

<p> 我们来举个栗子，你想要电脑给你播放一首歌，我们需要有“声卡”这个硬件，否则不会发出声音，但是硬件们如何能知道我让他们干什么呢？那就需要kernel（核心）来控制了，但是话又说回来，kernel听不懂我们说话，我们也没法直接记住kernel的语言，kernel是怎么和我们沟通的呢，这时候就是Shell的用武之地了。Shell像一个壳子一样将kernel包裹在里面，我们只要记住Shell的一些命令，就可以和kernel沟通了。
 看看下图理解一下：</p>

<p><img src="/images/2016/01/0320bash_1.jpg" alt="0320bash_1" /></p>

<h2> 什么是Bash Shell</h2>

<p> Bash Shell又是什么鬼？其实我们通俗的理解，衣服鞋子有品牌，耐克阿迪神马的，Shell也有各种牌子啊，Bash牌Shell。。。早年的Unix，因为发展者众，所以形成了很多版本的shell，而Linux使用的这一种版本就称为“Bourne Again Shell（简称bash）”。</p>

<h2> Bash的优点</h2>

<p> 这里的介绍主要是通过这些优点，我们有哪些使用时的技巧</p>

<ul>
<li><p>命令编修能力：</p>

<p> bash能记忆使用过的指令，通过“上下键”就可以找到之前输入的某个指令。我们曾经输入过的指令都记录 在.bash_history文档中。</p></li>
<li><p>档案对比补全功能：</p>

<p> 输入某个指令的前面几个单词之后，按下“tab”键，那么后面的单词就会自动补全了。如果有重复的指令，连续按下两次“tab”键，就会列出所有的重复单词。文件名也同样可以使用“tab”。</p></li>
<li><p>命令别名（alias）设定功能：</p>

<p> 可以设置别名来代替一些繁琐的操作，比如：
 alias git-pull=&lsquo;git pull team master &amp;&amp; git push origin master&rsquo;,以后直接输入git-pull就可以完成git从team远程仓库的master分支拉取最新代码，并且再push到origin仓库的master分支这样一个略繁琐的操作了，是不是非常方便啊~</p></li>
</ul>


<h2> Shell环境下的命令</h2>
]]></content>
  </entry>
  
</feed>
